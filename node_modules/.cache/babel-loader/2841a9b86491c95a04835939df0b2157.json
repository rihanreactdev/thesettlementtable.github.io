{"ast":null,"code":"import _regeneratorRuntime from\"/home/rently/Desktop/settlementtable/settlementtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(registerCaseSaga),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(getAllCaseFilesSaga),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(caseSaga);import{call,put,takeLatest}from\"redux-saga/effects\";import{getAllCaseFilesApi,registerCaseApi}from'../api';import{GET_ALL_CASE_FILES_ACTION,REGISTER_CASE_ACTION,STORE_ALL_CASE_FILES_ACTION}from\"../redux/userDashboard/actionTypes\";function registerCaseSaga(_ref){var payloadData;return _regeneratorRuntime.wrap(function registerCaseSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:payloadData=_ref.payloadData;_context.prev=1;_context.next=4;return call(registerCaseApi,payloadData);case 4:alert(\"Case Registered successful\");_context.next=11;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);console.log(\"error in registerCaseSaga\",_context.t0);alert(_context.t0.message);case 11:case\"end\":return _context.stop();}}},_marked,null,[[1,7]]);}function getAllCaseFilesSaga(){var _yield$call,data;return _regeneratorRuntime.wrap(function getAllCaseFilesSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return call(getAllCaseFilesApi);case 3:_yield$call=_context2.sent;data=_yield$call.data;_context2.next=7;return put({type:STORE_ALL_CASE_FILES_ACTION,caseFiles:[]});case 7:_context2.next=13;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);console.log(\"error in getAllCaseFilesSaga\",_context2.t0);alert(_context2.t0.message);case 13:case\"end\":return _context2.stop();}}},_marked2,null,[[0,9]]);}export function caseSaga(){return _regeneratorRuntime.wrap(function caseSaga$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return takeLatest(REGISTER_CASE_ACTION,registerCaseSaga);case 2:_context3.next=4;return takeLatest(GET_ALL_CASE_FILES_ACTION,getAllCaseFilesSaga);case 4:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["/home/rently/Desktop/settlementtable/settlementtable/src/sagas/caseSaga.js"],"names":["registerCaseSaga","getAllCaseFilesSaga","caseSaga","call","put","takeLatest","getAllCaseFilesApi","registerCaseApi","GET_ALL_CASE_FILES_ACTION","REGISTER_CASE_ACTION","STORE_ALL_CASE_FILES_ACTION","payloadData","alert","console","log","message","data","type","caseFiles"],"mappings":"oNAWUA,gB,iDAUAC,mB,iDAUOC,Q,EA/BjB,OAAQC,IAAR,CAAcC,GAAd,CAAmBC,UAAnB,KAAoC,oBAApC,CACA,OACIC,kBADJ,CAEIC,eAFJ,KAGO,QAHP,CAIA,OACIC,yBADJ,CAEIC,oBAFJ,CAGIC,2BAHJ,KAIO,oCAJP,CAMA,QAAUV,CAAAA,gBAAV,gJAA6BW,WAA7B,MAA6BA,WAA7B,iCAEQ,MAAMR,CAAAA,IAAI,CAACI,eAAD,CAAkBI,WAAlB,CAAV,CAFR,OAGQC,KAAK,CAAC,4BAAD,CAAL,CAHR,+EAKQC,OAAO,CAACC,GAAR,CAAY,2BAAZ,cACAF,KAAK,CAAC,YAAMG,OAAP,CAAL,CANR,oEAUA,QAAUd,CAAAA,mBAAV,yLAEyB,MAAME,CAAAA,IAAI,CAACG,kBAAD,CAAV,CAFzB,kCAEgBU,IAFhB,aAEgBA,IAFhB,kBAGQ,MAAMZ,CAAAA,GAAG,CAAC,CAAEa,IAAI,CAAGP,2BAAT,CAAsCQ,SAAS,CAAG,EAAlD,CAAD,CAAT,CAHR,0FAKQL,OAAO,CAACC,GAAR,CAAY,8BAAZ,eACAF,KAAK,CAAC,aAAMG,OAAP,CAAL,CANR,sEAUA,MAAO,SAAUb,CAAAA,QAAV,wIACH,MAAMG,CAAAA,UAAU,CAACI,oBAAD,CAAuBT,gBAAvB,CAAhB,CADG,wBAEH,MAAMK,CAAAA,UAAU,CAACG,yBAAD,CAA4BP,mBAA5B,CAAhB,CAFG","sourcesContent":["import {call, put, takeLatest} from \"redux-saga/effects\";\nimport {\n    getAllCaseFilesApi,\n    registerCaseApi\n} from '../api'\nimport {\n    GET_ALL_CASE_FILES_ACTION,\n    REGISTER_CASE_ACTION,\n    STORE_ALL_CASE_FILES_ACTION\n} from \"../redux/userDashboard/actionTypes\";\n\nfunction* registerCaseSaga({ payloadData }) {\n    try{\n        yield call(registerCaseApi, payloadData);\n        alert(\"Case Registered successful\");\n    } catch(error) {\n        console.log(\"error in registerCaseSaga\", error);\n        alert(error.message);\n    }\n}\n\nfunction* getAllCaseFilesSaga() {\n    try{\n        const { data } = yield call(getAllCaseFilesApi);\n        yield put({ type : STORE_ALL_CASE_FILES_ACTION, caseFiles : []});\n    } catch(error) {\n        console.log(\"error in getAllCaseFilesSaga\", error);\n        alert(error.message);\n    }\n}\n\nexport function* caseSaga() {\n    yield takeLatest(REGISTER_CASE_ACTION, registerCaseSaga)\n    yield takeLatest(GET_ALL_CASE_FILES_ACTION, getAllCaseFilesSaga)\n}\n"]},"metadata":{},"sourceType":"module"}