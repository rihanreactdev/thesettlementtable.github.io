{"ast":null,"code":"import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router/immutable';\nimport createSagaMiddleware from 'redux-saga';\nimport createRootReducer from '../redux';\nimport rootSagas from \"../sagas\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage';\nconst initState = {};\nconst sagaMiddleware = createSagaMiddleware();\nexport const history = createBrowserHistory();\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  whitelist: ['AppReducer'] // only navigation will be persisted\n\n};\nconst persistedReducer = persistReducer(persistConfig, createRootReducer(history));\nconst store = createStore(persistedReducer, initState, compose(applyMiddleware(routerMiddleware(history), // for dispatching history actions\nsagaMiddleware)));\nexport const persistor = persistStore(store);\nsagaMiddleware.run(rootSagas);\nstore.subscribe(() => {\n  console.log(\"Store Changed \", store.getState());\n});\nexport default store;","map":{"version":3,"sources":["/home/rently/Desktop/settlementtable/settlementtable/src/store/index.js"],"names":["createBrowserHistory","applyMiddleware","compose","createStore","routerMiddleware","createSagaMiddleware","createRootReducer","rootSagas","persistReducer","persistStore","storage","initState","sagaMiddleware","history","persistConfig","key","whitelist","persistedReducer","store","persistor","run","subscribe","console","log","getState"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,SAArC;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,iBAAP,MAA8B,UAA9B;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,QAA2C,eAA3C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,cAAc,GAAGP,oBAAoB,EAA3C;AACA,OAAO,MAAMQ,OAAO,GAAGb,oBAAoB,EAApC;AAEP,MAAMc,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBL,EAAAA,OAAO,EAAEA,OAFS;AAGlBM,EAAAA,SAAS,EAAE,CAAC,YAAD,CAHO,CAGQ;;AAHR,CAAtB;AAMA,MAAMC,gBAAgB,GAAGT,cAAc,CAACM,aAAD,EAAgBR,iBAAiB,CAACO,OAAD,CAAjC,CAAvC;AAEA,MAAMK,KAAK,GAAGf,WAAW,CACrBc,gBADqB,EAErBN,SAFqB,EAGrBT,OAAO,CACHD,eAAe,CACXG,gBAAgB,CAACS,OAAD,CADL,EACgB;AAC3BD,cAFW,CADZ,CAHc,CAAzB;AAWA,OAAO,MAAMO,SAAS,GAAGV,YAAY,CAACS,KAAD,CAA9B;AAEPN,cAAc,CAACQ,GAAf,CAAmBb,SAAnB;AAEAW,KAAK,CAACG,SAAN,CAAgB,MAAM;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,KAAK,CAACM,QAAN,EAA9B;AACH,CAFD;AAIA,eAAeN,KAAf","sourcesContent":["import { createBrowserHistory } from 'history'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { routerMiddleware } from 'connected-react-router/immutable';\nimport createSagaMiddleware from 'redux-saga';\nimport createRootReducer from '../redux';\nimport rootSagas from \"../sagas\";\nimport {persistReducer, persistStore} from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage';\n\nconst initState = {};\nconst sagaMiddleware = createSagaMiddleware();\nexport const history = createBrowserHistory();\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n    whitelist: ['AppReducer'] // only navigation will be persisted\n};\n\nconst persistedReducer = persistReducer(persistConfig, createRootReducer(history));\n\nconst store = createStore(\n    persistedReducer,\n    initState,\n    compose(\n        applyMiddleware(\n            routerMiddleware(history), // for dispatching history actions\n            sagaMiddleware\n        )\n    ),\n);\n\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSagas);\n\nstore.subscribe(() => {\n    console.log(\"Store Changed \", store.getState());\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}