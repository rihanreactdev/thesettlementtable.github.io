{"ast":null,"code":"var _jsxFileName = \"/home/rently/Desktop/settlementtable/settlementtable/src/components/helperComponents/tooltip.js\";\nimport React, { useState } from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Tooltip, makeStyles } from '@material-ui/core';\n\nfunction arrowGenerator(color) {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.95em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1em 1em',\n        borderColor: `transparent transparent ${color} transparent`\n      }\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.95em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 0 1em',\n        borderColor: `${color} transparent transparent transparent`\n      }\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.95em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 1em 0',\n        borderColor: `transparent ${color} transparent transparent`\n      }\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.95em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1em',\n        borderColor: `transparent transparent transparent ${color}`\n      }\n    }\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  arrow: {\n    position: 'absolute',\n    fontSize: 6,\n    width: '3em',\n    height: '3em',\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid'\n    }\n  },\n  popper: { ...arrowGenerator(theme.palette.common.white),\n    opacity: 1\n  },\n  tooltip: {\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    boxShadow: '0px 3px 7px 4px rgba(115,114,132,0.3);',\n    color: '#35323D',\n    fontFamily: 'Montserrat, sans-serif',\n    fontSize: 14,\n    fontWeight: 500,\n    padding: 20,\n    borderRadius: 7\n  },\n  tooltipPlacementLeft: {\n    margin: '0 8px'\n  },\n  tooltipPlacementRight: {\n    margin: '0 8px'\n  },\n  tooltipPlacementTop: {\n    margin: '8px 0'\n  },\n  tooltipPlacementBottom: {\n    margin: '8px 0'\n  }\n}));\nexport default function CustomTooltip({\n  children,\n  message,\n  placement,\n  disablePortal,\n  ...rest\n}) {\n  const {\n    arrow,\n    ...classes\n  } = useStyles();\n  const [arrowRef, setArrowRef] = useState(null);\n  return /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n    interactive: true,\n    title: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tooltip-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, message), /*#__PURE__*/React.createElement(\"span\", {\n      className: arrow,\n      ref: setArrowRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    })),\n    placement: placement,\n    classes: classes,\n    PopperProps: {\n      popperOptions: {\n        modifiers: {\n          arrow: {\n            enabled: Boolean(arrowRef),\n            element: arrowRef\n          }\n        }\n      },\n      disablePortal\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }), children);\n}\nCustomTooltip.propTypes = {\n  children: PropTypes.element,\n  message: PropTypes.string,\n  placement: PropTypes.string,\n  disablePortal: PropTypes.bool\n};\nCustomTooltip.defaultProps = {\n  children: null,\n  message: '',\n  placement: 'right',\n  disablePortal: false\n};","map":{"version":3,"sources":["/home/rently/Desktop/settlementtable/settlementtable/src/components/helperComponents/tooltip.js"],"names":["React","useState","PropTypes","Tooltip","makeStyles","arrowGenerator","color","top","left","marginTop","width","height","borderWidth","borderColor","bottom","marginBottom","marginLeft","right","marginRight","useStyles","theme","arrow","position","fontSize","content","margin","display","borderStyle","popper","palette","common","white","opacity","tooltip","backgroundColor","boxShadow","fontFamily","fontWeight","padding","borderRadius","tooltipPlacementLeft","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","CustomTooltip","children","message","placement","disablePortal","rest","classes","arrowRef","setArrowRef","popperOptions","modifiers","enabled","Boolean","element","propTypes","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Tooltip,\n  makeStyles,\n} from '@material-ui/core';\n\nfunction arrowGenerator(color) {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.95em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1em 1em',\n        borderColor: `transparent transparent ${color} transparent`,\n      },\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.95em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 0 1em',\n        borderColor: `${color} transparent transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.95em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 1em 0',\n        borderColor: `transparent ${color} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.95em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1em',\n        borderColor: `transparent transparent transparent ${color}`,\n      },\n    },\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  arrow: {\n    position: 'absolute',\n    fontSize: 6,\n    width: '3em',\n    height: '3em',\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  },\n  popper: {\n    ...arrowGenerator(theme.palette.common.white),\n    opacity: 1,\n  },\n  tooltip: {\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    boxShadow: '0px 3px 7px 4px rgba(115,114,132,0.3);',\n    color: '#35323D',\n    fontFamily: 'Montserrat, sans-serif',\n    fontSize: 14,\n    fontWeight: 500,\n    padding: 20,\n    borderRadius: 7,\n  },\n  tooltipPlacementLeft: {\n    margin: '0 8px',\n  },\n  tooltipPlacementRight: {\n    margin: '0 8px',\n  },\n  tooltipPlacementTop: {\n    margin: '8px 0',\n  },\n  tooltipPlacementBottom: {\n    margin: '8px 0',\n  },\n}));\n\nexport default function CustomTooltip({\n                                        children,\n                                        message,\n                                        placement,\n                                        disablePortal,\n                                        ...rest\n                                      }) {\n  const { arrow, ...classes } = useStyles();\n  const [arrowRef, setArrowRef] = useState(null);\n\n  return (\n    <Tooltip\n      interactive\n      title={(\n        <React.Fragment>\n          <span className=\"tooltip-message\">{message}</span>\n          <span\n            className={arrow}\n            ref={setArrowRef}\n          />\n        </React.Fragment>\n      )}\n      placement={placement}\n      classes={classes}\n      PopperProps={{\n        popperOptions: {\n          modifiers: {\n            arrow: {\n              enabled: Boolean(arrowRef),\n              element: arrowRef,\n            },\n          },\n        },\n        disablePortal,\n      }}\n      {...rest}\n    >\n      {children}\n    </Tooltip>\n  );\n}\n\nCustomTooltip.propTypes = {\n  children: PropTypes.element,\n  message: PropTypes.string,\n  placement: PropTypes.string,\n  disablePortal: PropTypes.bool,\n};\n\nCustomTooltip.defaultProps = {\n  children: null,\n  message: '',\n  placement: 'right',\n  disablePortal: false,\n};\n"]},"metadata":{},"sourceType":"module"}