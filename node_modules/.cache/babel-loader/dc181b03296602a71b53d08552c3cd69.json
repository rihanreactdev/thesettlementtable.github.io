{"ast":null,"code":"import{createBrowserHistory}from'history';import{applyMiddleware,compose,createStore}from'redux';import{routerMiddleware}from'connected-react-router/immutable';import createSagaMiddleware from'redux-saga';import createRootReducer from'../redux';import rootSagas from\"../sagas\";import{persistReducer,persistStore}from\"redux-persist\";import storage from'redux-persist/lib/storage';var initState={};var sagaMiddleware=createSagaMiddleware();export var history=createBrowserHistory();var persistConfig={key:'root',storage:storage,whitelist:['AppReducer']// only navigation will be persisted\n};var persistedReducer=persistReducer(persistConfig,createRootReducer(history));var store=createStore(persistedReducer,initState,compose(applyMiddleware(routerMiddleware(history),// for dispatching history actions\nsagaMiddleware)));export var persistor=persistStore(store);sagaMiddleware.run(rootSagas);store.subscribe(function(){console.log(\"Store Changed \",store.getState());});export default store;","map":{"version":3,"sources":["/home/rently/Desktop/settlementtable/settlementtable/src/store/index.js"],"names":["createBrowserHistory","applyMiddleware","compose","createStore","routerMiddleware","createSagaMiddleware","createRootReducer","rootSagas","persistReducer","persistStore","storage","initState","sagaMiddleware","history","persistConfig","key","whitelist","persistedReducer","store","persistor","run","subscribe","console","log","getState"],"mappings":"AAAA,OAASA,oBAAT,KAAqC,SAArC,CACA,OAASC,eAAT,CAA0BC,OAA1B,CAAmCC,WAAnC,KAAsD,OAAtD,CACA,OAASC,gBAAT,KAAiC,kCAAjC,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,UAA9B,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CACA,OAAQC,cAAR,CAAwBC,YAAxB,KAA2C,eAA3C,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA,GAAMC,CAAAA,SAAS,CAAG,EAAlB,CACA,GAAMC,CAAAA,cAAc,CAAGP,oBAAoB,EAA3C,CACA,MAAO,IAAMQ,CAAAA,OAAO,CAAGb,oBAAoB,EAApC,CAEP,GAAMc,CAAAA,aAAa,CAAG,CAClBC,GAAG,CAAE,MADa,CAElBL,OAAO,CAAEA,OAFS,CAGlBM,SAAS,CAAE,CAAC,YAAD,CAAe;AAHR,CAAtB,CAMA,GAAMC,CAAAA,gBAAgB,CAAGT,cAAc,CAACM,aAAD,CAAgBR,iBAAiB,CAACO,OAAD,CAAjC,CAAvC,CAEA,GAAMK,CAAAA,KAAK,CAAGf,WAAW,CACrBc,gBADqB,CAErBN,SAFqB,CAGrBT,OAAO,CACHD,eAAe,CACXG,gBAAgB,CAACS,OAAD,CADL,CACgB;AAC3BD,cAFW,CADZ,CAHc,CAAzB,CAWA,MAAO,IAAMO,CAAAA,SAAS,CAAGV,YAAY,CAACS,KAAD,CAA9B,CAEPN,cAAc,CAACQ,GAAf,CAAmBb,SAAnB,EAEAW,KAAK,CAACG,SAAN,CAAgB,UAAM,CAClBC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BL,KAAK,CAACM,QAAN,EAA9B,EACH,CAFD,EAIA,cAAeN,CAAAA,KAAf","sourcesContent":["import { createBrowserHistory } from 'history'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { routerMiddleware } from 'connected-react-router/immutable';\nimport createSagaMiddleware from 'redux-saga';\nimport createRootReducer from '../redux';\nimport rootSagas from \"../sagas\";\nimport {persistReducer, persistStore} from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage';\n\nconst initState = {};\nconst sagaMiddleware = createSagaMiddleware();\nexport const history = createBrowserHistory();\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n    whitelist: ['AppReducer'] // only navigation will be persisted\n};\n\nconst persistedReducer = persistReducer(persistConfig, createRootReducer(history));\n\nconst store = createStore(\n    persistedReducer,\n    initState,\n    compose(\n        applyMiddleware(\n            routerMiddleware(history), // for dispatching history actions\n            sagaMiddleware\n        )\n    ),\n);\n\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSagas);\n\nstore.subscribe(() => {\n    console.log(\"Store Changed \", store.getState());\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}