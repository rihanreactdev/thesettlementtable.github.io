{"ast":null,"code":"var _jsxFileName = \"/home/rently/Desktop/settlementtable/settlementtable/src/components/AutheticatedRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nexport default function AuthenticatedRoute({\n  Component,\n  path,\n  redirectPath\n}) {\n  const isLoggedIn = useSelector(store => store.AppReducer.isLoggedIn);\n  return /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: path,\n    render: routeProps => isLoggedIn ? /*#__PURE__*/React.createElement(Component, Object.assign({}, routeProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/home/rently/Desktop/settlementtable/settlementtable/src/components/AutheticatedRoute.js"],"names":["React","Route","Redirect","useSelector","AuthenticatedRoute","Component","path","redirectPath","isLoggedIn","store","AppReducer","routeProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,eAAe,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA;AAAnB,CAA5B,EAA+D;AAE1E,QAAMC,UAAU,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBF,UAA3B,CAA9B;AAEA,sBACI,oBAAC,KAAD;AACI,IAAA,KAAK,MADT;AAEI,IAAA,IAAI,EAAIF,IAFZ;AAGI,IAAA,MAAM,EAAKK,UAAU,IACjBH,UAAU,gBAEN,oBAAC,SAAD,oBAAeG,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFM,gBAIN,oBAAC,QAAD;AACI,MAAA,EAAE,EAAEJ,YADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAeH","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\n\nexport default function AuthenticatedRoute({ Component, path, redirectPath }) {\n\n    const isLoggedIn = useSelector(store => store.AppReducer.isLoggedIn);\n\n    return (\n        <Route\n            exact\n            path = {path}\n            render = { routeProps => (\n                isLoggedIn\n                    ?\n                    <Component {...routeProps}/>\n                    :\n                    <Redirect\n                        to={redirectPath}\n                    />\n            )}\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}