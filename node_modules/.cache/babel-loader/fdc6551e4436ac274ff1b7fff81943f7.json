{"ast":null,"code":"var _classCallCheck = require(\"/home/rently/Desktop/settlementtable/settlementtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/rently/Desktop/settlementtable/settlementtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/rently/Desktop/settlementtable/settlementtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/rently/Desktop/settlementtable/settlementtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar React = require('react');\n\nvar hoistStatics = require('hoist-non-react-statics');\n\nvar objectAssign = require('object-assign');\n\nvar Cookies = require('universal-cookie');\n\nvar subscribes = {};\nvar translations = {};\nvar defaultLanguage = 'en';\nvar language = 'en';\nvar count = 0;\nvar cookies;\nvar cookieName = 'language';\nvar cookieOption = {\n  path: '/',\n  maxAge: 157680000\n};\n\nfunction subscribe(cb) {\n  var newId = count;\n  subscribes[newId] = cb;\n  count += 1;\n  return newId;\n}\n\nfunction unsubscribe(id) {\n  delete subscribes[id];\n}\n\nfunction triggerSubscriptions() {\n  Object.keys(subscribes).forEach(function (id) {\n    new Promise(function (resolve) {\n      subscribes[id]();\n      resolve();\n    }).then();\n  });\n}\n\nfunction getLanguages() {\n  return Object.keys(translations);\n}\n\nfunction getDefaultLanguage() {\n  return defaultLanguage;\n}\n\nfunction getLanguage() {\n  return language;\n}\n\nfunction setDefaultLanguage(lang) {\n  defaultLanguage = lang;\n  language = lang;\n}\n\nfunction setLanguage(lang) {\n  if (getLanguages().indexOf(lang) === -1) {\n    return;\n  }\n\n  language = lang;\n  triggerSubscriptions();\n\n  if (cookies && process.browser) {\n    cookies.set(cookieName, language, cookieOption);\n  }\n}\n\nfunction setLanguageCookie(name, option, reqCookie) {\n  cookies = new Cookies(reqCookie);\n  cookieName = name || cookieName;\n  cookieOption = Object.assign({}, cookieOption, option);\n  var lang = cookies.get(name);\n\n  if (lang) {\n    setLanguage(lang);\n  }\n}\n\nfunction setTranslations(userTranslations) {\n  translations = userTranslations;\n  triggerSubscriptions();\n}\n\nfunction setDefaultTranslations(userTranslations) {\n  if (getLanguages().length !== 0) {\n    setTranslations(userTranslations);\n    return;\n  }\n\n  translations = userTranslations;\n}\n\nfunction getTranslation(lang) {\n  return translations[lang];\n}\n\nfunction _t(path, params, lang) {\n  var selectLang = lang || language;\n\n  function fallback() {\n    if (selectLang !== defaultLanguage) {\n      return _t(path, params, defaultLanguage);\n    }\n\n    return path;\n  }\n\n  var translationObj = getTranslation(selectLang);\n\n  if (!translationObj) {\n    return fallback();\n  }\n\n  var translationKeys = path.split('.');\n  var translation = '';\n  translationKeys.forEach(function (key) {\n    var temp = translationObj[key];\n\n    if (typeof translationObj[key] === 'object') {\n      translationObj = translationObj[key];\n    } else if (typeof temp === 'string') {\n      translation = temp;\n    }\n  });\n\n  if (!translation) {\n    return fallback();\n  }\n\n  if (params) {\n    Object.keys(params).forEach(function (key) {\n      var replace = \"{\".concat(key, \"}\");\n      translation = translation.replace(replace, params[key]);\n    });\n  }\n\n  return translation;\n}\n\nfunction translate(Component) {\n  var TranslatedComponet = /*#__PURE__*/function (_React$Component) {\n    \"use strict\";\n\n    _inherits(TranslatedComponet, _React$Component);\n\n    var _super = _createSuper(TranslatedComponet);\n\n    function TranslatedComponet() {\n      _classCallCheck(this, TranslatedComponet);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(TranslatedComponet, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this = this;\n\n        this.id = subscribe(function () {\n          return _this.forceUpdate();\n        });\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        unsubscribe(this.id);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(Component, objectAssign({}, this.props, {\n          t: function t(key, args, lang) {\n            return _t(key, args, lang);\n          }\n        }));\n      }\n    }]);\n\n    return TranslatedComponet;\n  }(React.Component);\n\n  return hoistStatics(TranslatedComponet, Component);\n}\n\nmodule.exports = {\n  getLanguages: getLanguages,\n  getDefaultLanguage: getDefaultLanguage,\n  getLanguage: getLanguage,\n  setDefaultLanguage: setDefaultLanguage,\n  setLanguage: setLanguage,\n  setLanguageCookie: setLanguageCookie,\n  setDefaultTranslations: setDefaultTranslations,\n  setTranslations: setTranslations,\n  translate: translate,\n  subscribe: subscribe,\n  unsubscribe: unsubscribe,\n  t: _t\n};","map":null,"metadata":{},"sourceType":"script"}