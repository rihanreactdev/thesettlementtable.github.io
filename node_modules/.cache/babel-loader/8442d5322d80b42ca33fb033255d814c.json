{"ast":null,"code":"import _regeneratorRuntime from\"/home/rently/Desktop/settlementtable/settlementtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/rently/Desktop/settlementtable/settlementtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import store from'../store';import{getSecureData}from\"../storage\";// Set content type as JSON for all post requests.\naxios.defaults.headers.post['Content-Type']='application/json';export var axiosInstance=axios.create({baseURL:'https://api-stage.thesettlementtable.in',timeout:10000});// Add a request interceptor\nvar requestInterceptor={onSuccess:function(){var _onSuccess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(config){var isLoggedIn,accessToken;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:try{console.log('Setting access token in axios for loggein users');isLoggedIn=store.getState().AppReducer.isLoggedIn;accessToken=getSecureData('token');if(isLoggedIn){config.headers.Authorization=\"JWT \".concat(accessToken);}}catch(error){console.log('error in axios.interceptors.request',error);}console.log(\"req\",config);return _context.abrupt(\"return\",config);case 3:case\"end\":return _context.stop();}}},_callee);}));function onSuccess(_x){return _onSuccess.apply(this,arguments);}return onSuccess;}(),onError:function onError(error){Promise.reject(error);}};axiosInstance.interceptors.request.use(requestInterceptor.onSuccess,requestInterceptor.onError);// Add a response interceptor\nvar responseInterceptor={onSuccess:function onSuccess(response){console.log(\"response\",response);if(typeof response.data.success!=='undefined'&&response.data.success===false){return Promise.reject(new Error(response.data.message));}return response;},onError:function(){var _onError=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(error){var originalRequest;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(typeof error.response==='undefined'||error.message===\"Network Error\")){_context2.next=2;break;}return _context2.abrupt(\"return\",Promise.reject(new Error(\"noIntenetMsg\")));case 2:originalRequest=error.config;console.log('Api Failed: ',{request:originalRequest,response:error.response});if(!(error.response.status>=500&&error.response.status<=599)){_context2.next=7;break;}console.log(\"Error in ApiWrapper serverError\",error);return _context2.abrupt(\"return\",Promise.reject(new Error(\"serverError\")));case 7:console.log(\"Error in ApiWrapper\",error);return _context2.abrupt(\"return\",Promise.reject(new Error(error.message)));case 9:case\"end\":return _context2.stop();}}},_callee2);}));function onError(_x2){return _onError.apply(this,arguments);}return onError;}()};axiosInstance.interceptors.response.use(responseInterceptor.onSuccess,responseInterceptor.onError);","map":{"version":3,"sources":["/home/rently/Desktop/settlementtable/settlementtable/src/apiWrapper/index.js"],"names":["axios","store","getSecureData","defaults","headers","post","axiosInstance","create","baseURL","timeout","requestInterceptor","onSuccess","config","console","log","isLoggedIn","getState","AppReducer","accessToken","Authorization","error","onError","Promise","reject","interceptors","request","use","responseInterceptor","response","data","success","Error","message","originalRequest","status"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport store from '../store';\nimport {getSecureData} from \"../storage\";\n\n// Set content type as JSON for all post requests.\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nexport const axiosInstance = axios.create({\n  baseURL: 'https://api-stage.thesettlementtable.in',\n  timeout: 10000\n});\n\n// Add a request interceptor\nconst requestInterceptor = {\n  onSuccess: async (config) => {\n    try {\n      console.log('Setting access token in axios for loggein users');\n      const isLoggedIn = store.getState().AppReducer.isLoggedIn ;\n      const accessToken = getSecureData('token');\n\n      if (isLoggedIn) {\n        config.headers.Authorization = `JWT ${accessToken}`;\n      }\n\n    } catch (error) {\n      console.log('error in axios.interceptors.request', error);\n    }\n\n    console.log(\"req\", config);\n\n    return config;\n  },\n  onError:(error) => {\n    Promise.reject(error);\n  }\n};\n\naxiosInstance.interceptors.request.use(requestInterceptor.onSuccess, requestInterceptor.onError);\n\n// Add a response interceptor\nconst responseInterceptor = {\n  onSuccess:(response) => {\n      console.log(\"response\", response);\n\n    if (typeof (response.data.success) !== 'undefined' && response.data.success === false) {\n      return Promise.reject(new Error(response.data.message));\n    }\n\n    return response;\n  },\n  onError:async (error) => {\n    if (typeof (error.response) === 'undefined' || error.message === \"Network Error\") {\n      return Promise.reject(new Error(\"noIntenetMsg\"));\n    }\n    const originalRequest = error.config;\n    console.log('Api Failed: ',\n      { request: originalRequest,\n        response: error.response\n      });\n\n    if (error.response.status >=500 && error.response.status <=599) {\n      console.log(\"Error in ApiWrapper serverError\", error);\n\n      return Promise.reject(new Error(\"serverError\"));\n    }\n\n    console.log(\"Error in ApiWrapper\", error);\n\n    return Promise.reject(new Error(error.message));\n  }\n};\n\naxiosInstance.interceptors.response.use(responseInterceptor.onSuccess, responseInterceptor.onError);\n"]},"metadata":{},"sourceType":"module"}