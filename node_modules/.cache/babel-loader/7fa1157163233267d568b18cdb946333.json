{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { getAllCaseFilesApi, registerCaseApi } from '../api';\nimport { GET_ALL_CASE_FILES_ACTION, REGISTER_CASE_ACTION, STORE_ALL_CASE_FILES_ACTION } from \"../redux/userDashboard/actionTypes\";\n\nfunction* registerCaseSaga({\n  payloadData\n}) {\n  try {\n    yield call(registerCaseApi, payloadData);\n    alert(\"Case Registered successful\");\n  } catch (error) {\n    console.log(\"error in registerCaseSaga\", error);\n    alert(error.message);\n  }\n}\n\nfunction* getAllCaseFilesSaga() {\n  try {\n    const {\n      data\n    } = yield call(getAllCaseFilesApi);\n    yield put({\n      type: STORE_ALL_CASE_FILES_ACTION,\n      caseFiles: []\n    });\n  } catch (error) {\n    console.log(\"error in getAllCaseFilesSaga\", error);\n    alert(error.message);\n  }\n}\n\nexport function* caseSaga() {\n  yield takeLatest(REGISTER_CASE_ACTION, registerCaseSaga);\n  yield takeLatest(GET_ALL_CASE_FILES_ACTION, getAllCaseFilesSaga);\n}","map":{"version":3,"sources":["/home/rently/Desktop/settlementtable/settlementtable/src/sagas/caseSaga.js"],"names":["call","put","takeLatest","getAllCaseFilesApi","registerCaseApi","GET_ALL_CASE_FILES_ACTION","REGISTER_CASE_ACTION","STORE_ALL_CASE_FILES_ACTION","registerCaseSaga","payloadData","alert","error","console","log","message","getAllCaseFilesSaga","data","type","caseFiles","caseSaga"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,UAAnB,QAAoC,oBAApC;AACA,SACIC,kBADJ,EAEIC,eAFJ,QAGO,QAHP;AAIA,SACIC,yBADJ,EAEIC,oBAFJ,EAGIC,2BAHJ,QAIO,oCAJP;;AAMA,UAAUC,gBAAV,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAA4C;AACxC,MAAG;AACC,UAAMT,IAAI,CAACI,eAAD,EAAkBK,WAAlB,CAAV;AACAC,IAAAA,KAAK,CAAC,4BAAD,CAAL;AACH,GAHD,CAGE,OAAMC,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,KAAzC;AACAD,IAAAA,KAAK,CAACC,KAAK,CAACG,OAAP,CAAL;AACH;AACJ;;AAED,UAAUC,mBAAV,GAAgC;AAC5B,MAAG;AACC,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMhB,IAAI,CAACG,kBAAD,CAA3B;AACA,UAAMF,GAAG,CAAC;AAAEgB,MAAAA,IAAI,EAAGV,2BAAT;AAAsCW,MAAAA,SAAS,EAAG;AAAlD,KAAD,CAAT;AACH,GAHD,CAGE,OAAMP,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,KAA5C;AACAD,IAAAA,KAAK,CAACC,KAAK,CAACG,OAAP,CAAL;AACH;AACJ;;AAED,OAAO,UAAUK,QAAV,GAAqB;AACxB,QAAMjB,UAAU,CAACI,oBAAD,EAAuBE,gBAAvB,CAAhB;AACA,QAAMN,UAAU,CAACG,yBAAD,EAA4BU,mBAA5B,CAAhB;AACH","sourcesContent":["import {call, put, takeLatest} from \"redux-saga/effects\";\nimport {\n    getAllCaseFilesApi,\n    registerCaseApi\n} from '../api'\nimport {\n    GET_ALL_CASE_FILES_ACTION,\n    REGISTER_CASE_ACTION,\n    STORE_ALL_CASE_FILES_ACTION\n} from \"../redux/userDashboard/actionTypes\";\n\nfunction* registerCaseSaga({ payloadData }) {\n    try{\n        yield call(registerCaseApi, payloadData);\n        alert(\"Case Registered successful\");\n    } catch(error) {\n        console.log(\"error in registerCaseSaga\", error);\n        alert(error.message);\n    }\n}\n\nfunction* getAllCaseFilesSaga() {\n    try{\n        const { data } = yield call(getAllCaseFilesApi);\n        yield put({ type : STORE_ALL_CASE_FILES_ACTION, caseFiles : []});\n    } catch(error) {\n        console.log(\"error in getAllCaseFilesSaga\", error);\n        alert(error.message);\n    }\n}\n\nexport function* caseSaga() {\n    yield takeLatest(REGISTER_CASE_ACTION, registerCaseSaga)\n    yield takeLatest(GET_ALL_CASE_FILES_ACTION, getAllCaseFilesSaga)\n}\n"]},"metadata":{},"sourceType":"module"}